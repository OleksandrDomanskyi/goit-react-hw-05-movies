{"version":3,"file":"static/js/19.7d33d06c.chunk.js","mappings":"qQACA,GAAgB,UAAY,2BAA2B,OAAS,wBAAwB,QAAU,yBAAyB,YAAc,8B,SCwDzI,EAlDgB,WAEZ,OAA8BA,EAAAA,EAAAA,UAAS,CACnCC,MAAO,GACPC,SAAS,EACTC,OAAO,IAHX,eAAOC,EAAP,KAAgBC,EAAhB,KAKQC,GAAOC,EAAAA,EAAAA,MAAPD,IAERE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAY,mCAAG,6FACjBJ,GAAW,SAAAK,GAAS,yBAAUA,GAAV,IAAqBR,SAAS,OADjC,UAESS,EAAAA,EAAAA,IAAcL,GAFvB,gBAETM,EAFS,EAETA,QACR,IACIP,GAAW,SAAAK,GAAS,yBAAUA,GAAV,IAAqBT,MAAOW,EAASV,SAAS,OACpE,MAAOC,GACLE,GAAW,SAAAK,GAAS,yBAAUA,GAAV,IAAqBR,SAAS,EAAOC,MAAOA,EAAMU,aANzD,2CAAH,qDASlBJ,MACD,CAACH,IAEJ,IAAQL,EAA0BG,EAA1BH,MAAOC,EAAmBE,EAAnBF,QAASC,EAAUC,EAAVD,MAClBW,EAASC,QAAQC,OAAOC,OAAOhB,GAAOiB,QAEtCC,EAAWlB,EAAMmB,KAAI,YAA4B,IAA1Bd,EAAyB,EAAzBA,GAAIe,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,QACrC,OACI,2BACI,eAAIC,UAAWC,EAAAA,OAAf,SAA+BH,KAC/B,cAAGE,UAAWC,EAAAA,QAAd,SAA+BF,MAF1BhB,MAQjB,OACI,iBAAKiB,UAAWC,EAAAA,UAAhB,UACKV,EAAS,GACN,eAAIS,UAAWC,EAAAA,KAAf,SACKL,KAGL,cAAGI,UAAWC,EAAAA,YAAd,sDAEHtB,IAAW,sCACXC,IAAS,uBAAIA,S,iMClDpBsB,E,MAAWC,GAAAA,OAAa,CAC1BC,QAAS,+BACTC,OAAQ,CACJC,QAAS,sCAIJC,EAAiB,mCAAG,sGACNL,EAASM,IAAI,uBADP,uBACrBC,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qDAKjBC,EAAa,mCAAG,WAAO3B,GAAP,yFACFmB,EAASM,IAAT,iBAAuBzB,IADrB,uBACjB0B,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,sDAKbE,EAAiB,mCAAG,WAAOC,GAAP,yFACNV,EAASM,IAAI,gBAAiB,CACjDH,OAAQ,CACJO,MAAAA,KAHqB,uBACrBH,EADqB,EACrBA,KADqB,kBAMtBA,EAAKpB,SANiB,2CAAH,sDASjBwB,EAAW,mCAAG,WAAO9B,GAAP,yFACAmB,EAASM,IAAT,iBAAuBzB,EAAvB,aADA,uBACf0B,EADe,EACfA,KADe,kBAEhBA,GAFgB,2CAAH,sDAKXrB,EAAa,mCAAG,WAAOL,GAAP,yFACFmB,EAASM,IAAT,iBAAuBzB,EAAvB,aADE,uBACjB0B,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH","sources":["webpack://goit-react-hw-05-movies/./src/components/Reviews/reviews.module.scss?1d70","components/Reviews/Reviews.jsx","shared/services/movies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"reviews_container__0EL+r\",\"author\":\"reviews_author__y-Lm7\",\"content\":\"reviews_content__9jPPr\",\"alternative\":\"reviews_alternative__5EHRx\"};","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { getReviewById } from \"shared/services/movies\";\n\nimport styles from './reviews.module.scss';\n\nconst Reviews = () => {\n\n    const [reviews, setReviews] = useState({\n        items: [],\n        loading: false,\n        error: false,\n    });\n    const { id } = useParams();\n\n    useEffect(() => {\n        const fetchReviews = async () => {\n            setReviews(prevState => ({ ...prevState, loading: true }));            \n            const  {results}  = await getReviewById(id);\n            try {              \n                setReviews(prevState => ({ ...prevState, items: results, loading: false }));\n            } catch (error) {\n                setReviews(prevState => ({ ...prevState, loading: false, error: error.message }));\n            }\n        }\n        fetchReviews();\n    }, [id]);\n\n    const { items, loading, error } = reviews;\n    const isCast = Boolean(Object.values(items).length);\n\n    const elements = items.map(({id, author, content}) => {\n        return (\n            <li key={id}>\n                <h2 className={styles.author}>{author}</h2>\n                <p className={styles.content}>{content}</p>\n            </li>\n                \n        )\n    });\n\n    return (\n        <div className={styles.container}>\n            {isCast > 0 ? (\n                <ul className={styles.list}>\n                    {elements}\n                </ul>\n            ) : (\n                <p className={styles.alternative}>We don't have any reviews for this movie</p>\n            )}\n            {loading && <p>...Loading</p>}\n            {error && <p>{error}</p>}\n        </div>\n    )\n};\n\nexport default Reviews;","import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n    params: {\n        api_key: \"46bbf66c9e65ae01644c2e2f5cf2826f\"\n    }\n});\n\nexport const getTrendingMovies = async () => {\n    const { data } = await instance.get('/trending/movie/day');\n    return data;\n};\n\nexport const getMoviesByID = async (id) => {\n    const { data } = await instance.get(`/movie/${id}`);\n    return data;\n};\n\nexport const getMoviesBySearch = async (query) => {\n    const { data } = await instance.get('/search/movie', {\n        params: {\n            query\n        }\n    });\n    return data.results;\n};\n\nexport const getCastById = async (id) => {\n    const { data } = await instance.get(`/movie/${id}/credits`);\n    return data;\n};\n\nexport const getReviewById = async (id) => {\n    const { data } = await instance.get(`/movie/${id}/reviews`);\n    return data;\n};"],"names":["useState","items","loading","error","reviews","setReviews","id","useParams","useEffect","fetchReviews","prevState","getReviewById","results","message","isCast","Boolean","Object","values","length","elements","map","author","content","className","styles","instance","axios","baseURL","params","api_key","getTrendingMovies","get","data","getMoviesByID","getMoviesBySearch","query","getCastById"],"sourceRoot":""}