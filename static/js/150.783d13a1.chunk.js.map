{"version":3,"file":"static/js/150.783d13a1.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MoviesGalleryItem/movies-gallery-item.module.scss?6e61","components/MoviesGalleryItem/MoviesGalleryItem.jsx","webpack://goit-react-hw-05-movies/./src/components/MoviesGallery/movies-gallery.module.scss?758e","components/MoviesGallery/MoviesGallery.jsx","webpack://goit-react-hw-05-movies/./src/components/SearchMovies/SearchMoviesForm/search-movies-form.module.scss?f714","components/SearchMovies/SearchMoviesForm/SearchMoviesForm.jsx","components/SearchMovies/SearchMovies.jsx","webpack://goit-react-hw-05-movies/./src/pages/MoviesPage/movies-page.module.scss?001e","pages/MoviesPage/MoviesPage.jsx","shared/services/movies.js","shared/services/posterLink.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"movies-gallery-item_item__KMkg+\",\"image\":\"movies-gallery-item_image__pW84j\",\"title\":\"movies-gallery-item_title__fTf1a\",\"info\":\"movies-gallery-item_info__R2w2q\",\"score\":\"movies-gallery-item_score__vV356\"};","import { Link, useLocation } from \"react-router-dom\";\n\nimport getPosterLink from \"shared/services/posterLink\";\n\nimport styles from './movies-gallery-item.module.scss';\n\nconst MoviesGalleryItem = ({ id, original_title, poster_path, vote_average }) => {\n\n    const location = useLocation();\n\n    return (\n        <li className={styles.item}>\n            <Link state={{ from: location }} to={`/movies/${id}`}>\n                <div className={styles.container}>\n                    <img src={getPosterLink(poster_path)} alt={original_title} className={styles.image} width={250}/>\n                    <div className={styles.info}>\n                        <h2 className={styles.title}>{original_title}</h2>\n                        <p className={styles.score}>{vote_average}</p>\n                    </div>\n                </div>\n            </Link>\n        </li>\n    )\n};\n\nexport default MoviesGalleryItem;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"movies-gallery_container__flghU\",\"gallery\":\"movies-gallery_gallery__vzbVM\"};","import MoviesGalleryItem from \"components/MoviesGalleryItem\";\n\nimport styles from './movies-gallery.module.scss';\n\nconst MoviesGallery = ({items}) => {\n\n    return (\n        <>\n            <div className={styles.container}>\n                <ul className={styles.gallery}>\n                    {items.map(item => (\n                        <MoviesGalleryItem key={item.id} {...item} />\n                    ))}\n                </ul>\n            </div>\n        </>\n    );\n};\n\nMoviesGallery.defaultProps = {\n    items: []\n}\n\nexport default MoviesGallery;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"search-movies-form_container__6jqLX\",\"form\":\"search-movies-form_form__yPOSP\",\"input\":\"search-movies-form_input__nXi9L\"};","import { useState } from \"react\";\nimport PropTypes from 'prop-types';\n\nimport styles from './search-movies-form.module.scss';\n\nconst SearchMoviesForm = ({ onSubmit }) => {\n\n    const [state, setState] = useState({\n        query: '',\n    });\n\n    const handleChange = ({ target }) => {\n        const { name, value } = target;\n        setState(prevState => ({ ...prevState, [name]: value }));\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onSubmit({ ...state });\n        setState({ query: '' });\n    };\n\n    return (\n        <div className={styles.container}>\n            <form className={styles.form} action=\"\" onSubmit={handleSubmit}>\n                <input\n                    className={styles.input}\n                    value={state.query}\n                    name=\"query\"\n                    onChange={handleChange}\n                    type=\"text\"\n                    placeholder=\"Search movies\"\n                    required\n                />\n            </form>\n        </div>\n    )\n};\n\nSearchMoviesForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchMoviesForm;","import { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\n\nimport SearchMoviesForm from \"./SearchMoviesForm\";\nimport MoviesGallery from \"components/MoviesGallery\";\n\nimport { getMoviesBySearch } from \"shared/services/movies\";\n\nconst SearchMovies = () => {\n\n    const [movies, setMovies] = useState({\n        items: [],\n        loading: false,\n        error: null\n    });\n\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get('query');\n\n    useEffect(() => {\n        const fetchMovies = async () => {\n            setMovies(prevState => ({ ...prevState, loading: true, error: null }));\n            try {\n                const result = await getMoviesBySearch(query);\n                setMovies(prevState => ({ ...prevState, loading: false, items: result }));\n            } catch (error) {\n                setMovies(prevState => ({ ...prevState, loading: false, error: error.message }));\n            }\n        }\n        if (query) {\n            fetchMovies();\n        }        \n    }, [query]);\n\n    const onSubmit = ({ query }) => setSearchParams({ query });\n    const { items, loading, error } = movies;\n\n    return (\n        <>\n            <SearchMoviesForm onSubmit={onSubmit} />\n            {loading && <p>...Loading</p>}\n            {error && <p>{error}</p>}\n            {Boolean(items.length) &&\n                <MoviesGallery items={items} />\n            }\n        </>\n    )\n};\n\nexport default SearchMovies;","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"movies-page_title__86Jt0\"};","import SearchMovies from \"components/SearchMovies\";\n\nimport styles from './movies-page.module.scss';\n\nconst MoviesPage = () => {\n    return (\n        <div>\n            <h2 className={styles.title}>Search movies</h2>\n            <SearchMovies/>\n        </div>\n        \n    )\n}\n\nexport default MoviesPage;","import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n    params: {\n        api_key: \"46bbf66c9e65ae01644c2e2f5cf2826f\"\n    }\n});\n\nexport const getTrendingMovies = async () => {\n    const { data } = await instance.get('/trending/movie/day');\n    return data;\n};\n\nexport const getMoviesByID = async (id) => {\n    const { data } = await instance.get(`/movie/${id}`);\n    return data;\n};\n\nexport const getMoviesBySearch = async (query) => {\n    const { data } = await instance.get('/search/movie', {\n        params: {\n            query\n        }\n    });\n    return data.results;\n};\n\nexport const getCastById = async (id) => {\n    const { data } = await instance.get(`/movie/${id}/credits`);\n    return data;\n};\n\nexport const getReviewById = async (id) => {\n    const { data } = await instance.get(`/movie/${id}/reviews`);\n    return data;\n};","const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\nconst DEFAULT_IMG_URL = 'https://icon-library.com/images/not-found-icon/not-found-icon-25.jpg';\n\nconst getPosterLink = (path) => (path ? `${BASE_IMG_URL}${path}` : `${DEFAULT_IMG_URL}`);\n\nexport default getPosterLink;"],"names":["id","original_title","poster_path","vote_average","location","useLocation","className","styles","state","from","to","src","getPosterLink","alt","width","MoviesGallery","items","map","item","defaultProps","onSubmit","useState","query","setState","action","e","preventDefault","value","name","onChange","target","prevState","type","placeholder","required","loading","error","movies","setMovies","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchMovies","getMoviesBySearch","result","message","Boolean","length","instance","axios","baseURL","params","api_key","getTrendingMovies","data","getMoviesByID","results","getCastById","getReviewById","path"],"sourceRoot":""}